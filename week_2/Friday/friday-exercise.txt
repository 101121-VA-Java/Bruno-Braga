public class Food { // // Creates the main method that receives parameters type String Array named args. Also has the access modifier Public which means that can be accessed at any place in the program.  Static keyword allows main to be called without creating an object of the class in which the main method is defined. It is the try point of the program.
	public String name; // Creates class' field data-type string called name and it is public. 
	public String type; // Creates class' field data-type string called type and it is public. 

	public Food(String name, String type) { // Creates a constructor named Food. It has two  parameters data-type String first one is call name and the Second is call type. Also it is public.
		this.name = name; // The first parameter of the method Food is assigned to the field of the class Food. the "this" keyword is used to differentiate the method Food parameters from the class Food field because both are called name.
		this.type = type; // The second parameter of the method Food is assigned to the field of the class Food. the "this" keyword is used to differentiate the method Food parameters from the class Food field because both are called type.
	} //

	public void cook() { // Method cook is declared. The void keyword means the it does not return a specific data-type when invoked.
		if (!name.contains("cooked")) { // if conditional statement that evaluates if the name contains string "cooked". If does not because the ! Exclamation point evaluates to false. It will execute the if body.
			name = "cooked " + name; // Store what has been passed into name in this case "potato" adds "cooked" in front of it and store in the name variable which is the one before the equals sign =.
		} // closes the if conditional statement
	} // 
} // 

public class Main { // Creates the main class where the main method is. The main method is the entry point of the program.
	public static void main(String[] args) { // Creates the main method that receives parameters type String Array named args. Also has the access modifier public which means that can be accessed at any place in the program.  Static keyword allows main to be called without creating an object of the class in which the main method is defined. It is the entry point of the program.
		Food myFood = new Food("potato", "vegetable"); // Instantiation of the method Food from the public class Food. And passes the argument string "potato" to String name and the argument string "vegetable" to the String type parameter of the method Food of the class Food. And stores into the myFood object type Food.
		myFood.cook(); // Takes the method cook() invoked by the object myFood.

		System.out.println(myFood.name); // prints: cooked potato.
	}
}